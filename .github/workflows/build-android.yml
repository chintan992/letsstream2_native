name: Build Android Release APK

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'  # Add npm caching

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-node-gradle-${{ hashFiles('**/package-lock.json', '**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-node-gradle-

      - name: Install dependencies
        run: |
          npm ci
          npx expo install

      # Removed separate expo-modules-autolinking install (should be in package.json)

      - name: Build Android Release
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease
          cd ..

      - name: Find APK file
        id: find-apk
        run: |
          APK_PATH=$(find android/app/build/outputs/apk -name '*.apk' | head -1)
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "Found APK: $APK_PATH"

      - name: Create Release
        uses: softprops/action-gh-release@v1  # More reliable action
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: "Android release build"
          draft: false
          prerelease: false
          files: ${{ steps.find-apk.outputs.apk_path }}
          token: ${{ secrets.GITHUB_TOKEN }}